import{jsx}from"react/jsx-runtime";import*as React from"react";import{Slot}from"@radix-ui/react-slot";import{cva}from"class-variance-authority";import*as LabelPrimitive from"@radix-ui/react-label";import{clsx}from"clsx";import{twMerge}from"tailwind-merge";function cn(...e){return twMerge(clsx(e))}const buttonVariants=cva("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",{variants:{variant:{default:"bg-primary text-primary-foreground hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90",outline:"border border-input bg-background hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-10 px-4 py-2",sm:"h-9 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-10 w-10"}},defaultVariants:{variant:"default",size:"default"}}),Button=React.forwardRef((({className:e,variant:a,size:r,asChild:t=!1,...s},o)=>jsx(t?Slot:"button",{className:cn(buttonVariants({variant:a,size:r,className:e})),ref:o,...s})));Button.displayName="Button";const Card=React.forwardRef((({className:e,...a},r)=>jsx("div",{ref:r,className:cn("rounded-lg border bg-card text-card-foreground shadow-sm",e),...a})));Card.displayName="Card";const CardHeader=React.forwardRef((({className:e,...a},r)=>jsx("div",{ref:r,className:cn("flex flex-col space-y-1.5 p-6",e),...a})));CardHeader.displayName="CardHeader";const CardTitle=React.forwardRef((({className:e,...a},r)=>jsx("div",{ref:r,className:cn("text-2xl font-semibold leading-none tracking-tight",e),...a})));CardTitle.displayName="CardTitle";const CardDescription=React.forwardRef((({className:e,...a},r)=>jsx("div",{ref:r,className:cn("text-sm text-muted-foreground",e),...a})));CardDescription.displayName="CardDescription";const CardContent=React.forwardRef((({className:e,...a},r)=>jsx("div",{ref:r,className:cn("p-6 pt-0",e),...a})));CardContent.displayName="CardContent";const CardFooter=React.forwardRef((({className:e,...a},r)=>jsx("div",{ref:r,className:cn("flex items-center p-6 pt-0",e),...a})));CardFooter.displayName="CardFooter";const Input=React.forwardRef((({className:e,type:a,...r},t)=>jsx("input",{type:a,className:cn("flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",e),ref:t,...r})));Input.displayName="Input";const labelVariants=cva("text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"),Label=React.forwardRef((({className:e,...a},r)=>jsx(LabelPrimitive.Root,{ref:r,className:cn(labelVariants(),e),...a})));Label.displayName=LabelPrimitive.Root.displayName;const Textarea=React.forwardRef((({className:e,...a},r)=>jsx("textarea",{className:cn("flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",e),ref:r,...a})));Textarea.displayName="Textarea";export{Button as B,Card as C,Input as I,Label as L,Textarea as T,CardHeader as a,CardTitle as b,cn as c,CardDescription as d,CardContent as e};