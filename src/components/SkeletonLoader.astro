---
// Skeleton loader component for loading states
export interface Props {
  width?: string;
  height?: string;
  borderRadius?: string;
  className?: string;
}

const {
  width = '100%',
  height = '20px',
  borderRadius = '4px',
  className = ''
} = Astro.props;
---

<div 
  class={`skeleton ${className}`}
  style={`width: ${width}; height: ${height}; border-radius: ${borderRadius};`}
></div>

<style>
  .skeleton {
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
    display: block;
  }
  
  @keyframes loading {
    0% {
      background-position: 200% 0;
    }
    100% {
      background-position: -200% 0;
    }
  }
  
  /* Dark mode support */
  @media (prefers-color-scheme: dark) {
    .skeleton {
      background: linear-gradient(90deg, #2a2a2a 25%, #3a3a3a 50%, #2a2a2a 75%);
      background-size: 200% 100%;
    }
  }
  
  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .skeleton {
      animation: none;
      background: #e0e0e0;
    }
    
    @media (prefers-color-scheme: dark) {
      .skeleton {
        background: #3a3a3a;
      }
    }
  }
</style>